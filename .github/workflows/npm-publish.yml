name: Release Library
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"
    branches:
      - master


env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: write

jobs:
  version:
    runs-on: ubuntu-latest
    name: Version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install semantic-release
        run: npm install --global semantic-release conventional-changelog-conventionalcommits @semantic-release/git @semantic-release/github @semantic-release/changelog @semantic-release/exec @semantic-release/commit-analyzer @semantic-release/release-notes-generator

      - name: Release
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ env.NPM_TOKEN }}
        run: |
          sudo apt-get install -y jq
          chmod +x ./scripts/prepareCMD.sh
          semantic-release
  build:
    name: Build
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Build
        run: npm prepare

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: production-files
          path: |
            dist
            package.json
            README.md
            CHANGELOG.md
  
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: production-files

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

  cleanup:
    name: Cleanup build artifacts
    needs:
      - deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "♻️ remove build artifacts"
        uses: geekyeggo/delete-artifact@v1
        with:
          name: production-files
